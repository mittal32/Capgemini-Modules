------------------------DQL----------------------------------------

1 SELECT STAFF_NAME AS "NAME OF THE STAFF",DESIGN_CODE AS "DESIGNATION CODE" FROM staff_master WHERE (HIREDATE <'01-JAN-2003') AND STAFF_SAL BETWEEN 12000 AND 25000;
2 SELECT STAFF_CODE,STAFF_NAME,DEPT_CODE FROM STAFF_MASTER WHERE(MONTHS_BETWEEN(SYSDATE,HIREDATE)) >= 216 ORDER BY HIREDATE DESC;
3 SELECT * FROM STAFF_MASTER WHERE MGR_CODE IS NULL;
4 SELECT * FROM BOOK_MASTER WHERE BOOK_PUB_YEAR BETWEEN 2001 AND 2004 OR BOOK_NAME LIKE '%[&]%';
5 SELECT STAFF_NAME FROM staff_master WHERE staff_name LIKE '%_%';

---------------------SINGLE ROW----------------------------
1 SELECT STAFF_NAME,'$'||STAFF_SAL AS STAFF_SALARY FROM STAFF_MASTER;
2 SELECT STUDENT_NAME,TO_CHAR(STUDENT_DOB,'MONTH DD YYYY') AS STUDENT_DOB FROM STUDENT_MASTER WHERE TO_CHAR(STUDENT_DOB,'DAY') LIKE ('%SATURDAY5') OR TO_CHAR(STUDENT_DOB,'DAY') LIKE ('%SUNDAY5') ;
3 SELECT STAFF_NAME,ROUND(MONTHS_BETWEEN(SYSDATE,HIREDATE)) AS MONTHS_WORKED FROM STAFF_MASTER;
4 SELECT * FROM STAFF_MASTER WHERE TO_CHAR(HIREDATE,'DD') BETWEEN 1 AND 15 AND TO_CHAR(HIREDATE,'MONTH') LIKE '%DECEMBER%' ;
5 SELECT STAFF_NAME,STAFF_SAL CASE WHEN STAFF_SAL >=50000 THEN 'A' WHEN STAFF_SAL > 25000 AND STAFF_SAL < 50000 THEN 'B' WHEN STAFF_SAL > 10000 AND STAFF_SAL < 25000 THEN 'C' ELSE 'D' END CASE FROM STAFF_MASTER;
6 SELECT STAFF_NAME,TO_CHAR(HIREDATE,'DD MONTH YYYY') AS HIRE_DATE,TO_CHAR(HIREDATE,'DAY')AS DAY FROM STAFF_MASTER ORDER BY TO_CHAR(HIREDATE,'DAY') DESC;
7 SELECT INSTR('Mississippi','i',2,3) FROM DUAL;
8 SELECT TO_CHAR(NEXT_DAY(SYSDATE,'TUESDAY'),'DD MONTH ,YYYY') AS DAY FROM DUAL WHERE NEXT_DAY(SYSDATE,'TUESDAY')<LAST_DAY(SYSDATE) ;
9 SELECT Student_Code,Student-name,Dept_Code DECODE(Dept_Code,10,'Electricals',20,'Electronics','Others')
FROM Student_Master;


----------------------GROUP FUNCTIONS----------------------
1 SELECT ROUND(max(Staff_sal)) AS Maximum,ROUND(Min(Staff_Sal)) AS Minimum,ROUND(Avg(Staff_sal)) AS Average
FROM Staff_master;
2 SELECT Deptno,COUNT(deptno) AS Total_Number_of_Managers FROM EMP WHERE JOB IN('MANAGER') GROUP BY Deptno,job;
3 SELECT Deptno,sum(sal) FROM EMP
WHERE JOB NOT IN('MANAGER') GROUP BY Deptno --HAVING sum(sal) > 20000-- ORDER BY DeptNo;


---------------JOINS-----------------------
1 SELECT S.STAFF_NAME,D.DEPT_CODE,D.DEPT_NAME,S.STAFF_SAL FROM STAFFMASTER S, DEPARTMENT_MASTER D WHERE S.DEPT_CODE=D.DEPT_CODE AND STAFF_SAL >20000;
2 SELECT S.STAFF_CODE AS STAFF# ,S.STAFF_NAME AS STAFF, D.DEPT_NAME, S.MGR_CODE AS MGR# FROM STAFFMASTER S,
DEPARTMENT_MASTER D WHERE S.DEPT_CODE=D.DEPT_CODE;
3 SELECT S.STUDENT_CODE,S.STUDENT_NAME,B.BOOK_CODE,BB.BOOK_NAME FROM STUDENTMASTER S,BOOK_TRANSACTIONS B, BOOK_MASTER BB WHERE S.STUDENT_CODE=B.STUDENT_CODE AND TO_CHAR(B.BOOK_EXPECTED_RETURN_DATE,'DD MM
YYYY') LIKE TO_CHAR(SYSDATE,'DD MM YYYY');
4 SELECT S.STAFF_CODE,S.STAFF_NAME,D.DEPT_NAME,F.DESIGN_NAME,G.BOOK_NAME,H.BOOK_ISSUE_DATE FROM STAFFMASTER S,DEPARTMENT_MASTER D,DESIGNATION-MASTER F,BOOK_MASTER F,BOOK_ISSUE_DATE H WHERE MONTHS_BETWEEN(TO_CHAR(H.BOOK_ISSUE_DATE,'MM'),TO_CHAR(SYSDATE,'MM'))<1;
6 SELECT Staff_Code, Staff_Name,STAFF_SAL FROM STAFFMASTER WHERE STAFF_SAL<(SELECT AVG(STAFF_SAL) FROM STAFFMASTER);
7 SELECT AUTHOR,BOOK_NAME FROM BOOK_MASTER GROUP BY AUTHORNAME HAVING COUNT(AUTHOR)>1;
8 SELECT S.Staff_Code,D.Staff_Name,D.DEPT_NAME FROM STAFFMASTER S,BOOK_TRANSACTIONS D GROUP BY S.STAFF_NAME HAVING COUNT(D.STAFF_NAME)>1;
9 SELECT S.STUDENT_CODE,S.STUDENT_NAME,D.DEPT_NAME FROM STAFFMASTER S,DEPARTMENT_MASTER D GROUP BY S.DEPT_CODE HAVING MAX(S.DEPT_CODE);
10 SELECT S.Staff_Code,S.Staff_Name,D.DEPT_NAME,F.DESIGN_NAME FROM STAFFMASTER S, DEPARTMENT_MASTER D,DESIGNATION_MASTER F WHERE MONTHS_BETWEEN(TO_CHAR(HIREDATE,'MM') ,TO_CHAR(SYSDATE,'MM'))<3;
13 SELECT DEPT_CODE,DEPT_NAME,COUNT(S.STAFF_NAME) AS NUMBEROFPEOPLE FROM STAFFMASTER S,DEPARTMENT_MASTER D GROUP BY DEPT_CODE;


---------------DATABASE OBJECT---------------------
1 create table customer(
customerid number(5),
cust_name varchar2(20),
Address1 varchar2(30),
Address2 varchar2(30)
);
2 Alter table customer rename column cust_name to customername;
Alter table customer modify customername varchar2(30) Not Null;
3 a Alter table customer add Gender varchar2(1);
Alter table customer add Age Number(3);
Alter table customer add phoneNo(10);
b Rename customer to cust_table;
4 insert into cust_table(&Customerid,'&cust_Name','&Address1','&Address2','&Gender',&Age,&phoneNo);
5 Alter table cust_table add constraints Custid_prim PRIMARY KEY (customerid);
7 Alter table cust_table drop PRIMARY KEY custid_prim;
8 Alter table cust_table add constraints Custid_prim PRIMARY KEY (customerid);
9 Alter table cust_table drop PRIMARY KEY custid_prim;
Insert into cust_table(1002, Becker, #114 New York, #114 New york , M, 45,431525, 15000.50);
Insert into cust_table(1003, Nanapatekar, #115 India, #115 India , M, 45, 431525,20000.50);
10 TRUNCATE table cust_table;
11 Alter table add e_mail varchar2(30);
12 Alter table cust_table DROP e_mail;
13 create table Suppliers as select(customerid as suppid,customername as sname,adddress1 as addr1,address2 as addr2,phoneno as contactno) from cust_table;
14 Drop table Suppliers;
create table customermaster(customerid(10) primary key(custid_pk),customername varchar2(30),Address1
varchar2(30),Address2 varchar2(30),Gender varchar2(1),Age number(3),phoneno number(10));
15 Create table Accoutnmaster(customerid number(5),Accountnumber number(10) primary
key(acno),accounttype char(3),ledgerbalance number(10) Not Null);
Create sequence seq_ano
MINVALUE 101 MAXVALUE 10000
START WITH 101INCREMENT BY 1
CACHE 101;
16 Alter table Accountmaster ADD constraint ass_fk FOREIGN KEY(customerid) REFERENCES customermaster(customerid);
17 Insert into customermaster values(1000, Allen, #115 Chicago, #115 Chicago, M, 25, 7878776);
   Insert into customermaster values(1001, George, #116 France, #116 France, M, 25, 4345240);
   Insert into customermaster values(1002, Becker, #114 New York, #114 New York, M, 45, 4315250);
18 alter table Accountmaster add constraint ck_ac check(accountype='NRI' or accountype='IND');
19 alter table Accountmaster add constraint Balance_check(ledger balance > 5000);
20 Delete from Accountmaster,customertable where customerid = 1001;
21 Create table accountdetails as select * from Accountmaster;
22 CREATE VIEW Acc_view AS
   SELECT(Customerid,Customername,Accountnumber,AccountType,ledgerBalance) from AccountMaster;
23 CREATE VIEW vAccs_Dtls AS SELECT Accounttype,ledgerbalance from Accountmaster where accounttype = 'IND' and 
    ledgerbalance < 10000;
24 create view accsvw10 AS SELECT * FROM Employee with READ ONLY; REVOKE INSERT,UPDATE,DELETE ON accsvw10 from user1;
insert into accsvw10(eid,ename,sal,job) values('SQL*PLUS','user1','INSERT','DISABLED');
25 CREATE sequence SEQ_DEPT minvalue 40 start with 40 increment by 10 MAX VALUE 200 cache 40;
26 create table departmentmaster(deptno number(50),Dname varchar2(25),location varchar2(25));
insert into departmentmaster values(seq_dept.NEXTVAL,'MARKETING','NEW DELHI');
insert into departmentmaster values(seq_dept.NEXTVAL,'SALES','chennai');
insert into departmentmaster values(seq_dept.NEXTVAL,'RESEARCH','BOSTON');
27 DROP sequence seq_dept;
28 CREATE INDEX no_name on emp(empno);
select * from emp;
29 create SYNONYM synemp for emp;
30 select * from synemp;
31 CREATE INDEX IDX_EMP_HIREDATE on emp(HIREDATE);
32 CREATE sequence SEQ_EMP minvalue 1001 start with 1001 ncrement by 1 cache 1001;



-------------------DML------------------
1 Create table employee as select * from emp where 1=3;
desc employee;
select * from employee;
2 select * from employee;
3 update table employee set job=(select job from employee where empno=7788),deptno=(select deptno fromemployee where empno=7788) where empno=7698;
4 delete from employee where departmentname like '%sales%';
5 update table employee set deptno=(select deptno from employee where deptno=7788) where deptno=7698;
6 insert into emp (empno,'ename','job',mgr,'hiredate',sal,comm,deptno) values (1000,Allen, Clerk,1001,12-jan-
01, 3000, 2,10);
insert into emp (empno,'ename','job',mgr,'hiredate',sal,comm,deptno) values (1001,George, analyst, null, 08
Sep 92, 5000,0, 10);
insert into emp (empno,'ename','job',mgr,'hiredate',sal,comm,deptno) values (1002, Becker, Manager, 1000, 4
Nov 92, 2800,4, 20);
insert into emp (empno,'ename','job',mgr,'hiredate',sal,comm,deptno) values (1003, 'Bill', Clerk, 1002, 4 Nov
92,3000, 0, 20);


----------------TRANSACTION--------------------
1 insert into customermaster (customerid,'customername','address1','address2','gender',age,'phoneno) values (
6000, John, #115 Chicago, #115 Chicago, M, 25, 7878776, 10000 );
insert into customermaster (customerid,'customername','address1','address2','gender',age,'phoneno) values
( 6001, Jack, #116 France, #116 France, M, 25, 434524, 20000 );
insert into customermaster (customerid,'customername','address1','address2','gender',age,'phoneno) values
( 6002, James, #114 New York, #114 New York, M, 45, 431525, 15000.50);
2 insert into customermaster (customerid,'customername','address1','address2','gender',age,'phoneno) values (
6000, John, #115 Chicago, #115 Chicago, M, 25, 7878776, 10000 );
insert into customermaster (customerid,'customername','address1','address2','gender',age,'phoneno) values
( 6001, Jack, #116 France, #116 France, M, 25, 434524, 20000 );
insert into customermaster (customerid,'customername','address1','address2','gender',age,'phoneno) values
( 6002, James, #114 New York, #114 New York, M, 45, 431525, 15000.50);
savepoint p1;
3 insert into customermaster (customerid,'customername','address1','address2','gender',age,'phoneno) values
( 6003, John, #114 Chicago, #114 Chicago, M, 45, 439525, 19000.60);
4 rollback p1;
